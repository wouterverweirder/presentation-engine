{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/isomorphic-fetch/fetch-npm-browserify.js","node_modules/whatwg-fetch/fetch.js","src/mobile/js/classes/Presentation.js","src/mobile/js/script.js","src/shared/js/Constants.js","src/shared/js/classes/MobileServerBridge.js","src/shared/js/classes/Presentation.js","src/shared/js/classes/SlideBridge.js"],"names":[],"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","file":"script.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","import {Constants} from '../../../shared/js/Constants';\nimport PresentationBase from '../../../shared/js/classes/Presentation';\nimport MobileServerBridge from '../../../shared/js/classes/MobileServerBridge';\n\nexport default class Presentation extends PresentationBase{\n\n  constructor(data, role, settings) {\n    super(data, role, settings);\n    this.$overlay = $('#overlay');\n  }\n\n  createMobileServerBridge() {\n    return new MobileServerBridge(this, this.settings);\n  }\n\n  handleMobileServerMessage(message) {\n    if(!message.content) {\n      return;\n    }\n    if(message.content.action == 'setCurrentSlideIndex') {\n      this.setCurrentSlideIndex(message.content.currentSlideIndex);\n    } else if(message.content.action == Constants.BLINK) {\n      this.blink(message.content.text, message.content.backgroundColor);\n    }\n  }\n\n  setCurrentSlideIndex(index) {\n    super.setCurrentSlideIndex(index);\n    if(this.$overlay) {\n      this.$overlay.removeClass('active');\n    }\n    if(this.blinkInterval) {\n      clearInterval(this.blinkInterval);\n    }\n  }\n\n  blink(text, backgroundColor) {\n    //overlay important, blinking text\n    this.$overlay.find('.content').html(text);\n    this.$overlay.addClass('active');\n    if(this.blinkInterval) {\n      clearInterval(this.blinkInterval);\n    }\n    this.blinkInterval = setInterval(this.blinkToggle.bind(this, backgroundColor), 500);\n  }\n\n  blinkToggle(backgroundColor) {\n    this.$overlay.toggleClass('blink-on');\n    if(this.$overlay.hasClass('blink-on')) {\n      this.$overlay.css('background-color', backgroundColor);\n    } else {\n      this.$overlay.css('background-color', '');\n    }\n  }\n\n}\n","import Presentation from './classes/Presentation';\nimport fetch from 'isomorphic-fetch';\n\n(() => {\n\n  const init = () => {\n    let settings = {\n      presentationPath: '/',\n      mobileServerUrl: ''\n    };\n    //get slides by xmlhttprequest\n    fetch('/data.json?t=' + Date.now())\n      .then(data => data.json())\n      .then(data => {\n        new Presentation(data, 'mobile', settings);\n      });\n  };\n\n  init();\n})();\n","export const Constants = {\n  GO_TO_PREVIOUS_SLIDE : 'goToPreviousSlide',\n  GO_TO_NEXT_SLIDE : 'goToNextSlide',\n  SET_SLIDES : 'setSlides',\n  SET_CURRENT_SLIDE_INDEX : 'setCurrentSlideIndex',\n\n  MESSAGE : 'message',\n  SOCKET_SEND : 'socketSend',\n  SOCKET_RECEIVE : 'socketReceive',\n  JOIN_SLIDE_ROOM : 'joinSlideRoom',\n  LEAVE_SLIDE_ROOM : 'leaveSlideRoom',\n\n  ROLE_PRESENTATION : 'presentation',\n  ROLE_MOBILE : 'mobile',\n\n  STATE_ACTIVE : 'active',\n  STATE_INACTIVE : 'inactive',\n\n  SET_SUBSTATE : 'setSubstate',\n\n  CHILD_APP_SAVE_CODE : 'childAppSaveCode',\n  CHILD_APP_RUN_CODE : 'childAppRunCode',\n  CHILD_APP_STDOUT_DATA : 'childAppStdoutData',\n  CHILD_APP_STDERR_DATA : 'childAppStderrData',\n\n  OPEN_COMMAND_LINE: 'openCommandLine',\n  OPEN_CAMERA: 'openCamera',\n\n  BLINK : 'blink',\n\n  HEART_RATE_POLAR : 'heartRatePolar',\n\n  SET_TEAM : 'setTeam',\n  UPDATE_MOTION : 'updateMotion',\n\n  YOU_WIN : 'youWin',\n  YOU_LOSE : 'youLose',\n\n  SHAKE_YOUR_PHONES_INTRO : 'shakeYourPhonesIntro',\n  SHAKE_YOUR_PHONES_GAME : 'shakeYourPhonesGame',\n  SHAKE_YOUR_PHONES_FINISHED : 'shakeYourPhonesFinished',\n\n  SHAKE_YOUR_PHONES_CLIENT_ADDED : 'shakeYourPhonesClientAdded',\n  SHAKE_YOUR_PHONES_CLIENT_REMOVED : 'shakeYourPhonesClientRemoved',\n  SHAKE_YOUR_PHONES_CLIENT_LIST : 'shakeYourPhonesClientList',\n  SHAKE_YOUR_PHONES_CLIENT_UPDATE : 'shakeYourPhonesClientUpdate'\n};\n","import fetch from 'isomorphic-fetch';\n\nexport default class MobileServerBridge {\n\n  constructor(presentation, settings) {\n    this.presentation = presentation;\n    this.settings = settings;\n    this.connect();\n  }\n\n  connect() {\n    console.log('MobileServerBridge.connect');\n    //console.warn('MobileServerBridge disabled');\n    //return;\n    //post to the api\n    fetch(`${this.settings.mobileServerUrl}/login`, {\n      method: 'POST',\n      body: JSON.stringify(this.getLoginCredentials()),\n      headers: new Headers({'Content-Type': 'application/json'})\n    })\n    .then(response => response.json())\n    .then(result => this.loginHandler(result))\n    .catch(e => {\n      //retry after one second\n      setTimeout(() => this.connect(), 1000);\n    });\n  }\n\n  getLoginCredentials() {\n    return {\n      email: this.settings.mobileServerUsername,\n      password: this.settings.mobileServerPassword,\n    };\n  }\n\n  loginHandler(result) {\n    this.token = result.token;\n    this.socket = io(this.settings.mobileServerUrl, {\n      query: 'token=' + this.token,\n      reconnection: false,\n      forceNew: true\n    });\n    this.socket.on('connect', this.socketConnectHandler.bind(this));\n    this.socket.on('disconnect', this.socketDisconnectHandler.bind(this));\n    this.socket.on('message', this.socketMessageHandler.bind(this));\n  }\n\n  socketConnectHandler() {\n    console.log('MobileServerBridge.socketConnectHandler');\n    this.presentation.mobileServerBridgeConnected();\n  }\n\n  socketDisconnectHandler() {\n    this.connect();\n  }\n\n  tryToSend() {\n    if(this.socket) {\n      this.socket.emit.apply(this.socket, arguments);\n    }\n  }\n\n  socketMessageHandler(message) {\n    this.presentation.mobileServerMessageHandler(message);\n  }\n}\n","import {Constants} from '../Constants';\nimport SlideBridge from './SlideBridge';\n\nexport default class Presentation {\n  /*\n   * data: json object with slides array property\n   * role: mobile or presentation\n   */\n  constructor(data, role, settings) {\n    this.data = data;\n    this.role = role;\n    this.settings = settings;\n    $('#presentation').attr('data-presentation-settings', JSON.stringify(settings));\n    this.currentSlideIndex = -1;\n    this.slideHolders = [];\n    this.numSlideHolders = 3;\n    this.slideBridges = [];\n    this.slideBridgesBySlideName = {};\n\n    this.createSlideHolders();\n    this.createSlideBridges(this.data);\n\n    this.mobileServerBridge = this.createMobileServerBridge();\n    this.startListeningForMessages();\n\n    this.setCurrentSlideIndex(0);\n  }\n\n  startListeningForMessages() {\n    window.addEventListener(\"message\", this.slideMessageHandler.bind(this), false);\n  };\n\n  createSlideHolders() {\n    for(var i = 0; i < this.numSlideHolders; i++) {\n      var $slideHolder = $('<div class=\"slide-frame\" />');\n      this.slideHolders.push($slideHolder);\n      $('#presentation').append($slideHolder);\n    }\n  };\n\n  createSlideBridges(data) {\n    var that = this;\n    var numSlides = data.slides.length;\n    for(var i = 0; i < numSlides; i++) {\n      var slideBridge = this.createSlideBridge(data.slides[i]);\n      this.slideBridges.push(slideBridge);\n      this.slideBridgesBySlideName[slideBridge.name] = slideBridge;\n    }\n  };\n\n  createSlideBridge(slide) {\n    return new SlideBridge(slide);\n  };\n\n  slideMessageHandler(event) {\n    if(!event.data) {\n      return;\n    }\n    switch(event.data.action) {\n      case Constants.SOCKET_SEND:\n        if(this.mobileServerBridge) {\n          this.mobileServerBridge.tryToSend(Constants.MESSAGE, event.data.message);\n        }\n        break;\n    }\n  };\n\n  mobileServerBridgeConnected() {\n    //join the rooms of the slideHolders\n    for(var i = 0; i < this.numSlideHolders; i++) {\n      this.mobileServerBridge.tryToSend(Constants.JOIN_SLIDE_ROOM, $(this.slideHolders[i]).attr('data-name'));\n    }\n  };\n\n  mobileServerMessageHandler(message) {\n    if(message.target.slide) {\n      //slide has to handle the message\n      var slideBridge = this.getSlideBridgeByName(message.target.slide);\n      if(slideBridge) {\n        slideBridge.tryToPostMessage({\n          action: Constants.SOCKET_RECEIVE,\n          message: message\n        });\n      }\n    } else {\n      //presentation has to handle the message\n      this.handleMobileServerMessage(message);\n    }\n  };\n\n  handleMobileServerMessage(message) {\n    console.log('[shared/Presentation] handleMobileServerMessage', message);\n  };\n\n  getSlideBridgeByIndex(index) {\n    if(index >= 0 && index < this.slideBridges.length) {\n      return this.slideBridges[index];\n    }\n    return false;\n  };\n\n  getSlideBridgeByName(slideName) {\n    return this.slideBridgesBySlideName[slideName];\n  };\n\n  getSlideHolderForSlide(slide, slidesNotToClear) {\n    if(slide) {\n      var $slideHolder = $('.slide-frame[data-name=\"' + slide.name + '\"]');\n      if($slideHolder.length > 0) {\n        return $slideHolder[0];\n      }\n      //get a free slideHolder\n      var slideNamesNotToClear = [];\n      $(slidesNotToClear).each(function(index, obj){\n        slideNamesNotToClear.push(obj.name);\n      });\n      var $slideHolders = $('.slide-frame');\n      for (var i = $slideHolders.length - 1; i >= 0; i--) {\n        $slideHolder = $($slideHolders[i]);\n        var name = $slideHolder.attr('data-name');\n        if(!name || slideNamesNotToClear.indexOf(name) === -1) {\n          return $slideHolder[0];\n        }\n      }\n    }\n    return false;\n  };\n\n  goToPreviousSlide() {\n    this.setCurrentSlideIndex(this.currentSlideIndex - 1);\n  };\n\n  goToNextSlide() {\n    this.setCurrentSlideIndex(this.currentSlideIndex + 1);\n  };\n\n  setCurrentSlideIndex(value) {\n    value = Math.max(0, Math.min(value, this.slideBridges.length - 1));\n    if(value !== this.currentSlideIndex) {\n      this.currentSlideIndex = value;\n\n      var currentSlideBridge = this.getSlideBridgeByIndex(this.currentSlideIndex);\n      var previousSlideBridge = this.getSlideBridgeByIndex(this.currentSlideIndex - 1);\n      var nextSlideBridge = this.getSlideBridgeByIndex(this.currentSlideIndex + 1);\n\n      //remove \"used\" class from slide holders\n      $('.slide-frame').removeAttr('data-used', false);\n\n      var currentSlideHolder = this.getSlideHolderForSlide(currentSlideBridge, [previousSlideBridge, nextSlideBridge]);\n      this.setupSlideHolder(currentSlideHolder, currentSlideBridge, Constants.STATE_ACTIVE, 0);\n\n      var previousSlideHolder = this.getSlideHolderForSlide(previousSlideBridge, [currentSlideBridge, nextSlideBridge]);\n      this.setupSlideHolder(previousSlideHolder, previousSlideBridge, Constants.STATE_INACTIVE, '-100%');\n\n      var nextSlideHolder = this.getSlideHolderForSlide(nextSlideBridge, [previousSlideBridge, currentSlideBridge]);\n      this.setupSlideHolder(nextSlideHolder, nextSlideBridge, Constants.STATE_INACTIVE, '100%');\n\n      //clear attributes of unused slide frames\n      $('.slide-frame').each(function(index, slideHolder){\n        if(!$(slideHolder).attr('data-used')) {\n          $(slideHolder).removeAttr('data-used').removeAttr('data-name').removeAttr('data-src');\n        }\n      });\n\n      //all other slideHolder bridges should be unlinked from their slideHolder\n      this.slideBridges.forEach(function(slideBridge){\n        if(slideBridge === currentSlideBridge) {\n          return;\n        }\n        if(slideBridge === previousSlideBridge) {\n          return;\n        }\n        if(slideBridge === nextSlideBridge) {\n          return;\n        }\n        slideBridge.slideHolder = null;\n      });\n\n      bean.fire(this, Constants.SET_CURRENT_SLIDE_INDEX, [this.currentSlideIndex]);\n    }\n  };\n\n  setupSlideHolder(slideHolder, slideBridge, state, left) {\n    if(slideHolder) {\n      var src = \"slides/\" + slideBridge.name + '.html';\n      if(slideBridge.data[this.role] && slideBridge.data[this.role].url) {\n        src = slideBridge.data[this.role].url;\n      }\n      src = this.processSlideSrc(src);\n      if(slideBridge.isAlreadyCorrectlyAttached(slideHolder, src)) {\n        //console.log(slideBridge.name + ' already attached');\n      } else {\n        this.attachToSlideHolder(slideHolder, slideBridge, src);\n      }\n      slideBridge.setState(state);\n      $(slideHolder).css('left', left);\n      $(slideHolder).attr('data-used', 1);\n    }\n  };\n\n  attachToSlideHolder(slideHolder, slideBridge, src) {\n    //listen for events on this slideHolder\n    $(slideHolder).off('message-from-slide');\n    $(slideHolder).on('message-from-slide', (event, message) =>  {\n      this.slideMessageHandler({data: message});\n    });\n    //leave previous channel of this slideHolder\n    if(this.mobileServerBridge) {\n      this.mobileServerBridge.tryToSend(Constants.LEAVE_SLIDE_ROOM, $(slideHolder).attr('data-name'));\n    }\n    //add the join as a callback for the onload event\n    slideBridge.attachToSlideHolder(slideHolder, src, this.slideLoaded.bind(this, slideHolder, slideBridge, src));\n  };\n\n  slideLoaded(slideHolder, slideBridge) {\n    //join new channel\n    if(this.mobileServerBridge) {\n      this.mobileServerBridge.tryToSend(Constants.JOIN_SLIDE_ROOM, $(slideHolder).attr('data-name'));\n    }\n  };\n\n  processSlideSrc(src) {\n    return src;\n  };\n\n  createMobileServerBridge() {\n    //to implement in extending classes\n  };\n}\n","import fetch from 'isomorphic-fetch';\n\nexport default class SlideBridge {\n  constructor(data) {\n    this.data = data;\n    this.name = this.data.name;\n  }\n\n  isAlreadyCorrectlyAttached(slideHolder, src) {\n    return (this.slideHolder === slideHolder && $(slideHolder).attr('data-name') === this.name && $(slideHolder).attr('data-src') === src);\n  }\n\n  attachToSlideHolder(slideHolder, src, cb) {\n    this.slideHolder = slideHolder;\n    //notify the content it is being cleared\n    this.tryToPostMessage({action: 'destroy'});\n    //clear the current content\n    this.slideHolder.innerHTML = '';\n    $(slideHolder).attr('data-name', this.name);\n    $(slideHolder).addClass('loading');\n\n    $(slideHolder).off('load');\n    $(slideHolder).on('load', () => {\n      this.tryToPostMessage({\n        action: 'setState',\n        state: this.state\n      });\n      $(slideHolder).off('load');\n    });\n\n    if(src !== $(slideHolder).attr('data-src')) {\n      //fetch the html\n      fetch(src)\n        .then(result => result.text())\n        .then(result => $(result))\n        .then($result => {\n          $(slideHolder).html($result.html());\n          $(slideHolder).removeClass('loading');\n          cb();\n        })\n        .catch(err => {\n          console.error(err);\n          $(slideHolder).removeClass('loading');\n          cb();\n        });\n      $(slideHolder).attr('data-src', src);\n    }\n  }\n\n  tryToPostMessage(message) {\n    if(!this.slideHolder)\n    {\n      console.log(this.name + ' post fail');\n      return;\n    }\n    //trigger with jquery\n    $(this.slideHolder).trigger('message-to-slide', message);\n  }\n\n  setState(state) {\n    this.state = state;\n    this.tryToPostMessage({\n      action: 'setState',\n      state: this.state\n    });\n  }\n};\n"]}